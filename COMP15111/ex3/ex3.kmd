KMD
00000000: EA000083    ;         B part3 ; part1 or part2 or part3
00000004:             ; 
00000004: 00 00 00 00 ; buffer  DEFS 100,0
00000008: 00 00 00 00 ; 
0000000C: 00 00 00 00 ; 
00000010: 00 00 00 00 ; 
00000014: 00 00 00 00 ; 
00000018: 00 00 00 00 ; 
0000001C: 00 00 00 00 ; 
00000020: 00 00 00 00 ; 
00000024: 00 00 00 00 ; 
00000028: 00 00 00 00 ; 
0000002C: 00 00 00 00 ; 
00000030: 00 00 00 00 ; 
00000034: 00 00 00 00 ; 
00000038: 00 00 00 00 ; 
0000003C: 00 00 00 00 ; 
00000040: 00 00 00 00 ; 
00000044: 00 00 00 00 ; 
00000048: 00 00 00 00 ; 
0000004C: 00 00 00 00 ; 
00000050: 00 00 00 00 ; 
00000054: 00 00 00 00 ; 
00000058: 00 00 00 00 ; 
0000005C: 00 00 00 00 ; 
00000060: 00 00 00 00 ; 
00000064: 00 00 00 00 ; 
00000068:             ; 
00000068: 6F 6E 65 00 ; s1      DEFB "one\0"
0000006C:             ;         ALIGN
0000006C: 74 77 6F 00 ; s2      DEFB "two\0"
00000070:             ;         ALIGN
00000070: 74 68 72 65 ; s3      DEFB "three\0"
00000074: 65 00       ; 
00000078:             ;         ALIGN
00000078: 66 6F 75 72 ; s4      DEFB "four\0"
0000007C: 00          ; 
00000080:             ;         ALIGN
00000080: 66 69 76 65 ; s5      DEFB "five\0"
00000084: 00          ; 
00000088:             ;         ALIGN
00000088: 73 69 78 00 ; s6      DEFB "six\0"
0000008C:             ;         ALIGN
0000008C: 73 65 76 65 ; s7      DEFB "seven\0"
00000090: 6E 00       ; 
00000094:             ;         ALIGN
00000094: 74 77 65 6E ; s8      DEFB "twentytwo\0"
00000098: 74 79 74 77 ; 
0000009C: 6F 00       ; 
000000A0:             ;         ALIGN
000000A0: 74 77 65 6E ; s9      DEFB "twenty\0"
000000A4: 74 79 00    ; 
000000A8:             ;         ALIGN
000000A8:             ; 
000000A8:             ; ;************************** part 1 **************************
000000A8:             ; printstring
000000A8:             ;         ;MOV  R0,R1     ; given
000000A8:             ;         ;SVC  3         ; given
000000A8:             ; 
000000A8: E4D10001    ; loop    LDRB R0, [R1],#1
000000AC: E3500000    ;         CMP  R0, #0
000000B0: 0A000001    ;         BEQ  end
000000B4: EF000000    ;         SVC  0
000000B8: EAFFFFFA    ;         B    loop
000000BC:             ;         
000000BC:             ; 
000000BC:             ; 
000000BC: E3A0000A    ; end     MOV  R0, #10    ; given - output end-of-line
000000C0: EF000000    ;         SVC  0          ; given
000000C4: E1A0F00E    ;         MOV  PC, LR     ; given
000000C8:             ; 
000000C8:             ; 
000000C8:             ; ;************************** part 2 ***************************
000000C8:             ; 
000000C8:             ; strcat
000000C8: E7D10003    ; loop1   LDRB R0, [R1,R3]
000000CC: E3500000    ;         CMP  R0, #0
000000D0: 0A000001    ;         BEQ  loop2
000000D4: E2833001    ;         ADD  R3, R3, #1
000000D8: EAFFFFFA    ;         B    loop1
000000DC:             ;         
000000DC:             ; 
000000DC: E4D20001    ; loop2   LDRB R0, [R2],#1
000000E0: E7C10003    ;         STRB R0, [R1,R3]        
000000E4: E3500000    ;         CMP  R0, #0        
000000E8: 0A000001    ;         BEQ  end2
000000EC: E2833001    ;         ADD  R3 ,R3, #1
000000F0: EAFFFFF9    ;         B    loop2      
000000F4: E1A0F00E    ; end2    MOV  PC, LR
000000F8:             ; 
000000F8:             ; 
000000F8:             ; strcpy
000000F8: E4D20001    ; loop3   LDRB R0, [R2],#1
000000FC: E4C10001    ;         STRB R0, [R1],#1                
00000100: E3500000    ;         CMP  R0, #0
00000104: 0A000000    ;         BEQ  end3
00000108: EAFFFFFA    ;         B    loop3
0000010C:             ;         
0000010C: E1A0F00E    ; end3    MOV  PC, LR
00000110:             ; ;************************** part 3 **************************
00000110: E58FE02C    ; sorted  STR  LR, return2        ; given
00000114:             ; 
00000114: E4D24001    ; loop4   LDRB R4, [R2],#1
00000118: E4D35001    ;         LDRB R5, [R3],#1
0000011C:             ;         
0000011C: E1540005    ;         CMP  R4,R5
00000120: 1A000006    ;         BNE  end4  
00000124: E3540000    ;         CMP  R4, #0
00000128: 1AFFFFFF    ;         BNE  skip
0000012C: E3550000    ; skip    CMP  R5, #0
00000130: 0A000002    ;         BEQ  end4  
00000134: E1540005    ;         CMP  R4, R5
00000138: 1A000000    ;         BNE  end4
0000013C: EAFFFFF4    ;         B loop4
00000140:             ; 
00000140: E51FF004    ; end4    LDR  PC, return2        ; given
00000144: 00000000    ;         return2 DEFW 0          ; given
00000148:             ; 
00000148:             ; ;*********************** the various parts ********************
00000148: E24F10E8    ; part1   ADR R1, s1
0000014C: EBFFFFD5    ;         BL  printstring
00000150: E24F10EC    ;         ADR R1, s2
00000154: EBFFFFD3    ;         BL  printstring
00000158: E24F10F0    ;         ADR R1, s3
0000015C: EBFFFFD1    ;         BL  printstring
00000160: E24F10F0    ;         ADR R1, s4
00000164: EBFFFFCF    ;         BL  printstring
00000168: E24F10F0    ;         ADR R1, s5
0000016C: EBFFFFCD    ;         BL  printstring
00000170: E24F10F0    ;         ADR R1, s6
00000174: EBFFFFCB    ;         BL  printstring
00000178: E24F10F4    ;         ADR R1, s7
0000017C: EBFFFFC9    ;         BL  printstring
00000180: E24F10F4    ;         ADR R1, s8
00000184: EBFFFFC7    ;         BL  printstring
00000188: E24F10F0    ;         ADR R1, s9
0000018C: EBFFFFC5    ;         BL  printstring
00000190: EF000002    ;         SVC 2
00000194:             ; 
00000194: E24F2F4D    ; part2   ADR R2, s1
00000198: E24F1F67    ;         ADR R1, buffer
0000019C: EBFFFFD5    ;         BL  strcpy
000001A0: E24F1F69    ;         ADR R1, buffer
000001A4: EBFFFFBF    ;         BL  printstring
000001A8: E24F2F51    ;         ADR R2, s2
000001AC: E24F1E1B    ;         ADR R1, buffer
000001B0: EBFFFFC4    ;         BL  strcat
000001B4: E24F1F6E    ;         ADR R1, buffer
000001B8: EBFFFFBA    ;         BL  printstring
000001BC: E24F2F55    ;         ADR R2, s3
000001C0: E24F1F71    ;         ADR R1, buffer
000001C4: EBFFFFBF    ;         BL  strcat
000001C8: E24F1F73    ;         ADR R1, buffer
000001CC: EBFFFFB5    ;         BL  printstring
000001D0: EF000002    ;         SVC 2
000001D4:             ; 
000001D4:             ; ; used by part3
000001D4: 00000000    ; return4 DEFW 0,0
000001D8: 00000000    ; 
000001DC: E50FE010    ; test2   STR LR, return4         ; This mechanism will be improved later
000001E0: E50F3010    ;         STR R3, return4+4       ; Assembler will evaluate addition      
000001E4: E1A00002    ;         MOV R0, R2
000001E8: EF000003    ;         SVC 3
000001EC: EBFFFFC7    ;         BL  sorted
000001F0: B3A0003C    ;         MOVLT R0, #'<'          ; Three-way IF using conditions
000001F4: 03A0003D    ;         MOVEQ R0, #'='
000001F8: C3A0003E    ;         MOVGT R0, #'>'
000001FC: EF000000    ;         SVC 0
00000200: E51F0030    ;         LDR R0, return4+4
00000204: EF000003    ;         SVC 3
00000208: E3A0000A    ;         MOV R0, #10
0000020C: EF000000    ;         SVC 0
00000210: E51FF044    ;         LDR PC, return4
00000214:             ; 
00000214: E24F2F6D    ; part3   ADR R2, s1
00000218: E24F3F6D    ;         ADR R3, s2
0000021C: EBFFFFEE    ;         BL  test2
00000220: E24F2F6F    ;         ADR R2, s2
00000224: E24F3F6F    ;         ADR R3, s3
00000228: EBFFFFEB    ;         BL  test2
0000022C: E24F2F71    ;         ADR R2, s3
00000230: E24F3D07    ;         ADR R3, s4
00000234: EBFFFFE8    ;         BL  test2
00000238: E24F2F72    ;         ADR R2, s4
0000023C: E24F3F71    ;         ADR R3, s5
00000240: EBFFFFE5    ;         BL  test2
00000244: E24F2F73    ;         ADR R2, s5
00000248: E24F3F72    ;         ADR R3, s6
0000024C: EBFFFFE2    ;         BL  test2
00000250: E24F2E1D    ;         ADR R2, s6
00000254: E24F3E1D    ;         ADR R3, s7
00000258: EBFFFFDF    ;         BL  test2
0000025C: E24F2F76    ;         ADR R2, s7
00000260: E24F3F75    ;         ADR R3, s8
00000264: EBFFFFDC    ;         BL  test2
00000268: E24F2F77    ;         ADR R2, s8
0000026C: E24F3F75    ;         ADR R3, s9
00000270: EBFFFFD9    ;         BL  test2
00000274: E24F2F7A    ;         ADR R2, s8
00000278: E24F3F7B    ;         ADR R3, s8
0000027C: EBFFFFD6    ;         BL  test2
00000280: EF000002    ;         SVC 2
00000284:             ; 

Symbol Table: Labels
: buffer                            00000004  Local -- ARM
: s1                                00000068  Local -- ARM
: s2                                0000006C  Local -- ARM
: s3                                00000070  Local -- ARM
: s4                                00000078  Local -- ARM
: s5                                00000080  Local -- ARM
: s6                                00000088  Local -- ARM
: s7                                0000008C  Local -- ARM
: s8                                00000094  Local -- ARM
: s9                                000000A0  Local -- ARM
: printstring                       000000A8  Local -- ARM
: loop                              000000A8  Local -- ARM
: end                               000000BC  Local -- ARM
: strcat                            000000C8  Local -- ARM
: loop1                             000000C8  Local -- ARM
: loop2                             000000DC  Local -- ARM
: end2                              000000F4  Local -- ARM
: strcpy                            000000F8  Local -- ARM
: loop3                             000000F8  Local -- ARM
: end3                              0000010C  Local -- ARM
: sorted                            00000110  Local -- ARM
: loop4                             00000114  Local -- ARM
: skip                              0000012C  Local -- ARM
: end4                              00000140  Local -- ARM
: return2                           00000144  Local -- ARM
: part1                             00000148  Local -- ARM
: part2                             00000194  Local -- ARM
: return4                           000001D4  Local -- ARM
: test2                             000001DC  Local -- ARM
: part3                             00000214  Local -- ARM
