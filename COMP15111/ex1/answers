Part 1

Q1) After obeying the "LDR R0" instruction, the value of PC is 00000004 and of R0
is 00000000

Q2) After obeying the "LDR R1" instruction, the value of PC is 00000008 and of R1
is 00000004

Q3) After obeying the "LDR R2" instruction, the value of PC is 0000000C and of R2
is 00000003


(For Q4 and Q5, I am asking about the registers involved in the arithmetic,
not PC/R15)

Q4) The first time the "ADD" instruction is obeyed, the value of register R0
changes from 00000000 to 00000004

Q5) The first time the "SUB" instruction is obeyed, the value of register R2
changes from 00000003 to 00000002


(For Q6, Q7, and Q8, I am asking about the effect of running the program
from the beginning until it stops at the SWI instruction, not about the
effect of just one instruction)

Q6) the "BNE" instruction is obeyed 3 times but only performs the branch 2
times

Only 2 registers (other than the PC register) change value

Q7) register R2 counts down from 00000003 to 00000000

Q8) register RO is modified to be the sum of memory locations Jack and Jill


Part 2

Q9) The memory location for "tom" turns red because there is an error,R0=0000000C and R12=00000000, R0 and R12 are not euqal.

Q10) If you reset and run the program again without reloading it then what
happens to the value of "tom" and why: tom equal to R0 when R8 euqal to R0. The reason why it changed is that the program is reset without reloding it, so the value of R0 is not reset and be plug in this new program.
